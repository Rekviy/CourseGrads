// <auto-generated />
using System;
using CourseGrads.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseGrads.Migrations
{
    [DbContext(typeof(UniversityContext))]
    [Migration("20250619153301_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseGrads.Models.Graduate", b =>
                {
                    b.Property<int>("DipNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DipNum"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnrollmentYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GraduationYear")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("DipNum");

                    b.HasIndex("GroupId");

                    b.ToTable("Graduates");
                });

            modelBuilder.Entity("CourseGrads.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CourseGrads.Models.Professor", b =>
                {
                    b.Property<int>("ProfessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessorId"));

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfessorId");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("CourseGrads.Models.Speciality", b =>
                {
                    b.Property<int>("SpecialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialityId"));

                    b.Property<string>("SpecialityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialityId");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("CourseGrads.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CourseGrads.Models.SubjectGraduate", b =>
                {
                    b.Property<int>("DipNum")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<byte>("Grade")
                        .HasColumnType("tinyint");

                    b.HasKey("DipNum", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectsGraduates");
                });

            modelBuilder.Entity("CourseGrads.Models.Thesis", b =>
                {
                    b.Property<int>("DipNum")
                        .HasColumnType("int");

                    b.Property<string>("DiplomaQualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GraduationSubject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DipNum");

                    b.ToTable("Theses");
                });

            modelBuilder.Entity("CourseGrads.Models.Graduate", b =>
                {
                    b.HasOne("CourseGrads.Models.Group", "Group")
                        .WithMany("Graduates")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Group");
                });

            modelBuilder.Entity("CourseGrads.Models.Group", b =>
                {
                    b.HasOne("CourseGrads.Models.Speciality", "Speciality")
                        .WithMany("Groups")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("CourseGrads.Models.Subject", b =>
                {
                    b.HasOne("CourseGrads.Models.Professor", "Professor")
                        .WithMany("Subjects")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("CourseGrads.Models.SubjectGraduate", b =>
                {
                    b.HasOne("CourseGrads.Models.Graduate", "Graduate")
                        .WithMany("SubjectsGraduates")
                        .HasForeignKey("DipNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseGrads.Models.Subject", "Subject")
                        .WithMany("SubjectsGraduates")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Graduate");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CourseGrads.Models.Thesis", b =>
                {
                    b.HasOne("CourseGrads.Models.Graduate", "Graduate")
                        .WithOne("Thesis")
                        .HasForeignKey("CourseGrads.Models.Thesis", "DipNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Graduate");
                });

            modelBuilder.Entity("CourseGrads.Models.Graduate", b =>
                {
                    b.Navigation("SubjectsGraduates");

                    b.Navigation("Thesis");
                });

            modelBuilder.Entity("CourseGrads.Models.Group", b =>
                {
                    b.Navigation("Graduates");
                });

            modelBuilder.Entity("CourseGrads.Models.Professor", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CourseGrads.Models.Speciality", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("CourseGrads.Models.Subject", b =>
                {
                    b.Navigation("SubjectsGraduates");
                });
#pragma warning restore 612, 618
        }
    }
}
